//Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
// By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.


fn main() {
    fibonacci(1,2);
}
fn fibonacci(first_number: usize, second_number: usize){
  println!("{}", first_number );
  println!("{}", second_number );
  let mut running_total:usize = second_number;
  
  let mut temp_no1:usize = first_number;
  let mut temp_no2:usize = second_number;
  let mut temp_no: usize = 0;
  while temp_no < 4000000{
    temp_no = temp_no1 + temp_no2;
    if temp_no % 2 == 0{
      running_total = running_total + temp_no;
    }
    temp_no1 = temp_no2;
    temp_no2 = temp_no;
    println!("{}", temp_no )

  }
  println!("Total = {}", running_total )
}